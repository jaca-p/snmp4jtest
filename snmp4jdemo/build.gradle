///////////////////////////////////////////////////////////////////////////////////////
//
//                 Gradle Template Summary
//
//   Frequently Used Command:
//      [ gradle ]          Default task. same with 'gradle build'.
//      [ gradle build ]    Compile/test your code, and create a war file containing your main classes and resources.
//
////////////////////////////////////////////////////////////////////////////////////////

//Definition apply plugin
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'

//--------------------------------- Based setting  for current project ---------------------------------

// Definition sourceCompatibility and targetCompatibility.
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

buildscript {
    ext {
        MODULE                      = "snmp4jdemo"
        MAVEN_GROUP_ID              = "com.logicmonitor"
        MAVEN_ARTIFACT_ID           = "snmp4jdemo"
        MAVEN_VERSION               = "0.1"
    }

    repositories {
        mavenCentral()
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

// Access maven center.
repositories {
    mavenCentral()
}


// Definition source which should include.
sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
        }
    }
}


//--------------------------------- Dependencies definition ---------------------------------

dependencies {

    // https://mvnrepository.com/artifact/org.snmp4j/snmp4j
    //compile group: 'org.snmp4j', name: 'snmp4j', version: '2.5.6'
    implementation 'org.snmp4j:snmp4j:2.5.6'

    // runtimeOnly 'org.snmp4j:snmp4j:2.5.6'
}

// Define manifest
ext.sharedManifest = manifest {
    attributes(
            'Modlue': "${MODULE}",
            'Implementation-Title': "${project.name}",
            'Built-Date': new Date().getDateTimeString(),
            'Built-With': "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
            'Created-By': 'Java ' + System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')'
    )
}


//--------------------------------- Specific Tasks ---------------------------------
/*
*  Override jar task addition attributes
*/
jar {
    manifest {
        attributes(
                'Main-Class': 'demo.Main'
        )
    }
}

/**
 * fatjar demo
 */
task fatjar(type: Jar) {

    manifest {
        attributes 'Implementation-Title': 'snmp4jdemo',
                'Implementation-Version': '1.0'
    }
    archiveBaseName.set(project.name)
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

defaultTasks 'clean','test','jar'

task build (overwrite: true ) {
    dependsOn = ['clean','test','jar']

    test.mustRunAfter clean
    jar.mustRunAfter test
}

task devbuild {
    dependsOn = ['clean','jar']

    jar.mustRunAfter clean
}

//Define the test task
test {
    ignoreFailures = true
    reports.html.destination = file("$buildDir/test-reports")
}


task createJavaProject {
    doFirst {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs()}
    }
}

